/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pedalprogram;

import java.awt.event.ItemListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author super
 */
public class SongPanel extends javax.swing.JPanel {
    /*NOTE: Width and height are taken from the design page for reference in
    other classes. Changing these values here will have no impact on the size
    of SongPanels in practice, but will impact the sizing of panels that contain them.*/
    public static int HEIGHT = 51;
    public static int WIDTH = 736;
    private int index = 0;
    private PedalGUI parent = null;
    private final JFileChooser fileChooser = new JFileChooser();
    private Song song = new Song();

    /**
     * Creates new form SongPanel
     */
    public SongPanel() {
        initComponents();
    }
    
    public SongPanel(PedalGUI parent, Song song){
        initComponents();
        this.song = song;
        this.parent = parent;
        this.index = song.getIndex();
        indexLabel.setText("" + song.getIndex());
        filenameBox.setText(song.getFilepath());
        note1.setSelectedIndex(Song.getIndexOfNote(song.getNotes()[0]));
        note2.setSelectedIndex(Song.getIndexOfNote(song.getNotes()[1]));
        note3.setSelectedIndex(Song.getIndexOfNote(song.getNotes()[2]));
        note4.setSelectedIndex(Song.getIndexOfNote(song.getNotes()[3]));
        
        //Restrict file selection to only MP3s
        fileChooser.setFileFilter(new FileNameExtensionFilter("MP3 Files", "mp3"));
    }

    public int getIndex(){
        return index;
    }
    
    public String getFilename(){
        return filenameBox.getText();
    }
    
    public char[] getNotes(){
        char[] notes = new char[4];
        notes[0] = Song.IDS[note1.getSelectedIndex()];
        notes[1] = Song.IDS[note2.getSelectedIndex()];
        notes[2] = Song.IDS[note3.getSelectedIndex()];
        notes[3] = Song.IDS[note4.getSelectedIndex()];
        
        return notes;
    }
    
    public Song getSong(){
        return song;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        indexLabel = new javax.swing.JLabel();
        note1 = new javax.swing.JComboBox<>();
        note2 = new javax.swing.JComboBox<>();
        note3 = new javax.swing.JComboBox<>();
        note4 = new javax.swing.JComboBox<>();
        filenameBox = new javax.swing.JTextField();
        chooseFileButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(736, 51));

        indexLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        indexLabel.setText("?");

        note1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "Bb", "B", "C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab" }));
        note1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                note1ActionPerformed(evt);
            }
        });

        note2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "Bb", "B", "C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab" }));
        note2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                note2ActionPerformed(evt);
            }
        });

        note3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "Bb", "B", "C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab" }));

        note4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "Bb", "B", "C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab" }));

        filenameBox.setEditable(false);
        filenameBox.setToolTipText("The file path of the MP3 file for this song");
        filenameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filenameBoxActionPerformed(evt);
            }
        });

        chooseFileButton.setText("Choose File");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(indexLabel)
                .addGap(14, 14, 14)
                .addComponent(note1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(note2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(note3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(note4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filenameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooseFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(indexLabel)
                    .addComponent(note1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filenameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseFileButton)
                    .addComponent(removeButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filenameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filenameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filenameBoxActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        parent.removeSong(index);
    }//GEN-LAST:event_removeButtonActionPerformed

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            song.setFile(fileChooser.getSelectedFile());
            filenameBox.setText(song.getFile().getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(null, "File not chosen", "File Chooser", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    private void note1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_note1ActionPerformed
//        String currentSelected2 = (String)note2.getSelectedItem();
//        note2.removeAllItems();
//        for(String note : Song.NAMES){
//            note2.addItem(note);
//        }
//        if(note1.getSelectedIndex() > -1){
//            note2.removeItem(note1.getSelectedItem());
//        }
//        if(!currentSelected2.equals(note2.getSelectedItem())){
//            note2.setSelectedItem(currentSelected2);
//        } else {
//            note2.setSelectedIndex(-1);
//        }
    }//GEN-LAST:event_note1ActionPerformed

    private void note2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_note2ActionPerformed
//        String currentSelected1 = (String)note1.getSelectedItem();
//        note1.removeAllItems();
//        for(String note : Song.NAMES){
//            note1.addItem(note);
//        }
//        if(note2.getSelectedIndex() > -1){
//            note1.removeItem(note2.getSelectedItem());
//        }
//        if(note1.getSelectedItem() != null && !currentSelected1.equals(note1.getSelectedItem())){
//            note1.setSelectedItem(currentSelected1);
//        } else {
//            note1.setSelectedIndex(-1);
//        }
    }//GEN-LAST:event_note2ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JTextField filenameBox;
    private javax.swing.JLabel indexLabel;
    private javax.swing.JComboBox<String> note1;
    private javax.swing.JComboBox<String> note2;
    private javax.swing.JComboBox<String> note3;
    private javax.swing.JComboBox<String> note4;
    private javax.swing.JButton removeButton;
    // End of variables declaration//GEN-END:variables

}
